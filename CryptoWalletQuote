from moralis import evm_api
import requests
import pygsheets


api_key = "API KEY"
wallet_address = 'WALLET ADDRESS'


service_file = r'C:\Users\jamck\new-eclipse-workplace\Python Projects\CryptoSheetQuote\cryptosheetquote-c2560d7d4554.json'
gc = pygsheets.authorize(service_file=service_file)
sheetname = 'CryptoSheetQuote'
sh = gc.open(sheetname)
wks = sh.worksheet_by_title('Sheet1')
wks.clear(start='A1', end='Z') 


params = {"chain": "arbitrum", "address": wallet_address}
result = evm_api.token.get_wallet_token_balances(api_key=api_key, params=params) 
response = requests.get("https://api.exchangerate-api.com/v4/latest/USD") 
exchange_rates = response.json()["rates"]
token_Data = evm_api.token.get_wallet_token_balances(api_key=api_key, params=params)
token_Data_Length = len(token_Data)
eth_balance = evm_api.balance.get_native_balance(api_key=api_key,params=params,)

    

def update_sheet():
    wks.update_value('A1', 'Wallet Address')
    wks.update_value('B1', 'Total Eth in Wallet')
    wks.update_value('C1', 'Tokens')
    wks.update_value('D1', 'Symbol')
    wks.update_value('E1', 'Quantity')
    wks.update_value('F1', 'Price of Coin')
    wks.update_value('G1', 'ETH Conversion') # NOT WORKING
    wks.update_value('H1', 'Total Value (USD)')
    wks.update_value('A2',  wallet_address)
       

y = 2
for tokens in token_Data:
    wallet_tokens = tokens['name']
    wks.update_value(f"C{y}", wallet_tokens)
    y += 1
    
    
y = 2  
for symbols in token_Data:
    wallet_symbols = symbols['symbol']
    wks.update_value(f"D{y}",  wallet_symbols)
    y += 1


update_sheet()


anything below this line is not working and commented out in my code
--------------------------------------------------------------------------------------------------------------
#tokenAddresses = []
#for i in range(token_Data_Length):
    #tokenAddresses.append(token_Data[i]['token_address'])
#y = 2
#for eth_balance in tokenAddresses:
    #eth_balance_usd = eth_balance['balance']
    #wks.update_value(f"C{y}", eth_balance_usd)
    #y += 1

#y = 2
#for i in range(token_Data_Length):
    #tokenAdd = tokenAddresses[i]
    
#token_Price = evm_api.token.get_token_price(api_key=api_key, params={"address": tokenAdd,"chain": "eth"})
#for usd_Price in token_Price: # NOT WORKING
    #tokenAdd = tokenAddresses[i]
    #token_Price = usd_Price['quantity']
    #wks.update_value(f"F{y}",  token_Price)
    #y += 1
    

#y = 2    
#for total_Value in token_price:
    #total_usd_value = total_Value['total_value_usd']
    #wks.update_value(f"H{y}",  token_Price)
    #y += 1
    
    
#y = 2  
#for quantity in token_Data: # NOT WORKING
    #wallet_quantity = quantity['quantity']
    #wks.update_value(f"E{y}",  wallet_quantity)
    #y += 1  
    


    

